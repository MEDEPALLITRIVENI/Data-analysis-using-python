# -*- coding: utf-8 -*-
"""DA_DAY6_DesicionTree_RandomForest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cRuPj88XH-Wk1Oc3gTGGVSfXy6jTtQv2
"""

#Load libraries
import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.tree import export_graphviz,plot_tree

df=pd.read_csv("/content/demodt.txt",sep=',')
df

features_col=['Literacy','Cleanliness','Crime_Rate']
feature=df[features_col]
Target=df.Good

DTC=DecisionTreeClassifier()

DTC.fit(feature, Target)

DTC.predict([[90,80,60]])

l=int(input("Enter literacy rate in your city : "))
c1=int(input("Enter cleanliness rate in your city : "))
c2=int(input("Enter crime rate in your city : "))
pred=DTC7.predict([[l,c1,c2]])
if pred==1:
  print("Good state")
else :
  print("Bad state")

from sklearn.tree import export_graphviz,plot_tree

plot_tree(DTC)   #plot_tree(#Trained model)

"""RandomForest Algorithm"""

#Load Libraries
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier

RF=RandomForestClassifier(n_estimators=10)
RF.fit(feature,Target)

#saving all decision trees
import os
output_dir='tree_visualizations'
os.makedirs(output_dir,exist_ok=True)

for i,tree in enumerate(RF.estimators_):
  tree_dot_file=os.path.join(output_dir,f"tree_{i}.dot")
  tree_png_file=os.path.join(output_dir,f"tree_{i}.png")

from sklearn.tree import export_graphviz
export_graphviz(tree, out_file=tree_dot_file, feature_names=["Literacy", "Cleanliness", "Crime_Rate"],
                    class_names=[str(cls) for cls in RF.classes_], filled=True, rounded=True)

command=f"dot -Tpng {tree_dot_file} -o {tree_png_file}"
os.system(command)
print(f"Tree{i} visualization saved to {tree_png_file}")