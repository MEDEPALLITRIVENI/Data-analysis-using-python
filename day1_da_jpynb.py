# -*- coding: utf-8 -*-
"""Day1_DA_jpynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VT_FUxAM4VNqlaV6LNTU3Non3MbdhvkJ
"""

#variable
a=10
print("I am",a,"years old");

#Adding two integer variables
a=int(input("Enter first number"));
b=int(input("Enter second number"));
c=int(a)+int(b);
print("Addition of two numbers:",c);

#Arithmetic operators on two integer variables
a=int(input("Enter first number"));
b=int(input("Enter second number"));
print("Addition of two numbers:",a+b);
print("subtraction of two numbers:",a-b);
print("multiplication of two numbers:",a*b);
print("Quotient of two numbers:",a/b);
print("Remainder of two numbers:",a%b);
print("Floor division+ of two numbers:",a//b);
print("Power of a to b numbers:",a**b);

#problem statement
#Take a salary of a person from user.
#if the salary of a person is more than 50,000/- there will be tax.Print his finala salary
sal=int(input("Enter salary of a person:"));
if(sal>=50000):
  print("salary after paying tax is:",sal-(0.1*sal));
else:
  print("no tax,final salary is",sal);

#problem statement
#Take salary from the user
#if the salary is 0 to 50k : 5% tax
#if salary is 51k to 70k : 10% tax
#if the salary is 71k 1L : 12% tax
#if the salary exeeds 1L,print you are promoted to next level
sal=int(input("Enter the salary of a person:"));
if(sal<=50000):
    print("salary after paying 5% tax is:",sal-(0.05*sal));
elif(sal>50000 and sal<=70000):
    print("salary after paying 10% tax is:",sal-(0.1*sal));
elif(sal>70000 and sal<=100000):
    print("salary after paying 12% tax is:",sal-(0.12*sal));
else:
    print("your salary is more than 1L,so you are promoted");

#for loop
#Multiplication table in between range
r=range(1,11)
num=int(input("Enter a number:"))
for i in r:
  print(num, 'x', i, '=', num*i)

#Multiplication table using while loop
num=int(input("Enter a number:"))
i=1;
while(i<=10):
  print(num, 'x', i, '=', num*i)
  i=i+1

#list : Heterogeneous
l1=[1,'Reshma',90.5,True,'varsha']
for i in l1:
  print(i)

#Mutable:
#insertion :
l1=[1,'Reshma',90.5,True,'varsha']
l1.append('jyothi') #adds element to the list
print(l1)
l1.insert(2,'yash')
print(l1)

#adding two lists using extend
l1=[1, 'Reshma', 'yash', 90.5, True, 'varsha', 'jyothi']
l2=['sriya','ramya',False,2,4.8]
#list1.extend(list2)
l1.extend(l2) #l1=l1+l2
print(l1)

#pop
l1=[1, 'Reshma', 'yash', 90.5, True, 'varsha', 'jyothi', 'sriya', 'ramya', False, 2, 4.8]
l1.remove('ramya') #listname.remove(element)
print(l1)
l1.pop(0) #listname.pop(index)
print(l1)

#remove
l1.remove('ramya') #listname.remove(element)
print(l1)

#clearing the elements of the list
l1.clear()
print(l1)

#problem statement
#create a list of 10 random integers.print their squares.save these squares in a new list
l1=[2,11,18,20,15,14,8,9,25,10]
new_list=[]
for i in l1:
    new_list.append(i*i)
print(new_list)

#create a list of 10 random integers.print their squares.save these squares in a new list
#list comprehension
#newlist=[output for]
l1=[2,11,18,20,15,14,8,9,25,10]
new_list=[i*i for i in l1]
print(new_list)

#create a list of 10 random integers.print their squares of the numbers greater than 50.save these squares in a new list
#list comprehension
#newlist=[output for]
l1=[2,11,63,20,53,14,80,92,25,10]
new_list=[i*i for i in l1 if i>50]
print(new_list)

#list comprehension
#create a list of random integers.print their squares of the numbers greater than 50.save these squares in a new list
#newlist=[(stmt of if) if () else (stmt of else) for]
l1=[23,67,12,34,69]
new_list=[i*i if i>50 else 'x' for i in l1]
print(new_list)

#problem statement
#Take the salary from the user.if sal<50K : 10%tax.Otherwise 15% tax using list comprehension
sal=int(input("Enter salary from the user:"))
list=[print(sal-(0.1*sal)) if sal<50000 else print(sal-(0.15*sal))]

sal_l1=[78000,50400,34000,23000,14000]
new_list=[i-i*0.1 if i<50000 else i-i*0.15 for i in sal_l1]
print(new_list)



#creating dictionary
dict1={31:'Triveni',3:'yash',6:'sriya','mentor':'jwalitha',31:'likith'}
print(dict1)

#printing keys and values of dictionary
dict1={31:'Triveni',3:'yash',6:'sriya','mentor':'jwalitha',30:'likith'}
print(dict1.keys())
print(dict1.values())

#access value by key
print(dict1[30])

#nested dictionary
dict={'dept':'cse','details':{'year':22,'code':5,'sec':'d','count':71}}
print("year is:",dict['details']['year'])
print("section is:",dict['details']['sec'])
print("strength is:",dict['details']['count'])



#clubbing two lists in dictionary
id=[31,3,5,12,54,5]
names=['Triveni','yash','sri','ramya','mouni','mahitha']
dict=(zip(id,names))
for i in dict:
    print(i)

#creating dictionary using two lists
from builtins import dict
id=[31,3,5,12,54,5]
names=['Triveni','yash','sri','ramya','mouni','mahitha']
dictionary=dict(zip(id,names))
print(dictionary)

#Numpy
#creating one dimensional array
import numpy as np
ar=np.array([1,2,3,4]) #1d array
print(ar.ndim) #dimension type
print(ar.shape)

#Numpy
#creating two dimensional array
arr=np.array([[1,2,3,4],[5,6,7,8]])
print(arr.ndim) #dimension type
print(arr.shape)
print(arr)

ar=np.ones((2,2,4)) #g r c
print(ar)

ar=np.zeros((2,2,4)) #g r c
print(ar)

#creating identity matrix
arr=np.eye(3)
print(arr)

ar=np.arange(1,11,2) #start,stop,step
print(ar)
print(type(ar))

#problem statement
#print all the numbers divisible by 8 between 0-1000
ar=np.arange(8,1001,8) #start,stop,step
print(ar)
print(type(ar))

#printing the range of numbers into n numbers having common difference
ar=np.linspace(48,58,10) #equal parts of division wiil be created
print(ar)

